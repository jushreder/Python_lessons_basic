# Задание-1:
# Написать программу, выполняющую операции (сложение и вычитание) с простыми дробями.
# Дроби вводятся и выводятся в формате:
# n x/y ,где n - целая часть, x - числитель, у - знаменатель.
# Дроби могут быть отрицательные и не иметь целой части, или иметь только целую часть.
# Примеры:
# Ввод: 5/6 + 4/7 (всё выражение вводится целиком в виде строки)
# Вывод: 1 17/42  (результат обязательно упростить и выделить целую часть)
# Ввод: -2/3 - -2
# Вывод: 1 1/3

expr='5/6 + 4/7'
expr='-2/3 - -2'

def val(args):
    """

    :param args:
    :return:
    """
    b=args.split(' ')
    # print(b)
    if len(b)>1:
        if b[0][0]=="-":
            c=eval(b[0]+ '-' + b[1])
        else:
            c = eval(b[0] + '+' + b[1])
    else:
        c= eval(b[0])
    return c


def expr_l(args,sign):
    """

    :param args:
    :param sign:
    :return:
    """
    # print(args)
    # print(len(args))
    c = eval(str(val(args[0])) + sign + str(val(args[1])))

    return c

def denominator(args):
    """

    :param args:
    :return:
    """
    d=1
    for i in args:

        if i.count("/"):
            d=d*int((i[i.index("/")+1:]))
        else:
            d=d*1
    return d

def upr(x,y):
    """

    :param x:
    :param y:
    :return:
    """

    for i in range(1,round(x*y)+1):

        if round(x*y)%i==0 and y%i==0:
            z=i

    return z

if expr.count(' + ') > 0:
    expr_ = expr.split(' + ')
    l_expr = expr_l(expr_,'+')
elif expr.count(' - ') > 0:
    expr_ = expr.split(' - ')
    l_expr = expr_l(expr_,'-')

d_expt=denominator(expr_)
dl=upr(l_expr%1, d_expt)

fin=""
if l_expr//1!=0:
    fin= str(int(l_expr//1))
if l_expr%1>0:
    fin =fin + " " + str(int((round((l_expr%1)*d_expt))/dl)) + "/" +str(int(d_expt/dl))

print(fin)



# Задание-2:
# Дана ведомость расчета заработной платы (файл "data/workers").
# Рассчитайте зарплату всех работников, зная что они получат полный оклад,
# если отработают норму часов. Если же они отработали меньше нормы,
# то их ЗП уменьшается пропорционально, а за заждый час переработки
# они получают удвоенную ЗП, пропорциональную норме.
# Кол-во часов, которые были отработаны, указаны в файле "data/hours_of"

# Задание-3:
# Дан файл ("data/fruits") со списком фруктов.
# Записать в новые файлы все фрукты, начинающиеся с определенной буквы.
# Т.е. в одном файле будут все фрукты на букву “А”, во втором на “Б” и т.д.
# Файлы назвать соответственно.
# Пример имен файлов: fruits_А, fruits_Б, fruits_В ….
# Важно! Обратите внимание, что нет фруктов, начинающихся с некоторых букв.
# Напишите универсальный код, который будет работать с любым списком фруктов
# и распределять по файлам в зависимости от первых букв, имеющихся в списке фруктов.
# Подсказка:
# Чтобы получить список больших букв русского алфавита:
# print(list(map(chr, range(ord('А'), ord('Я')+1))))
